// Code generated by protoc-gen-go. DO NOT EDIT.
// source: trace-sampling-manager.proto

package trace_sampling_manager

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ComponentID int32

const (
	ComponentID_UNKNOWN_COMPONENT  ComponentID = 0
	ComponentID_SPEC_RECONSTRUCTOR ComponentID = 1
	ComponentID_TRACE_ANALYZER     ComponentID = 2
)

var ComponentID_name = map[int32]string{
	0: "UNKNOWN_COMPONENT",
	1: "SPEC_RECONSTRUCTOR",
	2: "TRACE_ANALYZER",
}

var ComponentID_value = map[string]int32{
	"UNKNOWN_COMPONENT":  0,
	"SPEC_RECONSTRUCTOR": 1,
	"TRACE_ANALYZER":     2,
}

func (x ComponentID) String() string {
	return proto.EnumName(ComponentID_name, int32(x))
}

func (ComponentID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4d6cc870899719bb, []int{0}
}

type Host struct {
	Hostname             string   `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Port                 int32    `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Host) Reset()         { *m = Host{} }
func (m *Host) String() string { return proto.CompactTextString(m) }
func (*Host) ProtoMessage()    {}
func (*Host) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d6cc870899719bb, []int{0}
}

func (m *Host) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Host.Unmarshal(m, b)
}
func (m *Host) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Host.Marshal(b, m, deterministic)
}
func (m *Host) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Host.Merge(m, src)
}
func (m *Host) XXX_Size() int {
	return xxx_messageInfo_Host.Size(m)
}
func (m *Host) XXX_DiscardUnknown() {
	xxx_messageInfo_Host.DiscardUnknown(m)
}

var xxx_messageInfo_Host proto.InternalMessageInfo

func (m *Host) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *Host) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

type HostsToTraceRequest struct {
	Hosts                []*Host     `protobuf:"bytes,1,rep,name=hosts,proto3" json:"hosts,omitempty"`
	ComponentID          ComponentID `protobuf:"varint,2,opt,name=componentID,proto3,enum=trace_sampling_manager.ComponentID" json:"componentID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *HostsToTraceRequest) Reset()         { *m = HostsToTraceRequest{} }
func (m *HostsToTraceRequest) String() string { return proto.CompactTextString(m) }
func (*HostsToTraceRequest) ProtoMessage()    {}
func (*HostsToTraceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d6cc870899719bb, []int{1}
}

func (m *HostsToTraceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HostsToTraceRequest.Unmarshal(m, b)
}
func (m *HostsToTraceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HostsToTraceRequest.Marshal(b, m, deterministic)
}
func (m *HostsToTraceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HostsToTraceRequest.Merge(m, src)
}
func (m *HostsToTraceRequest) XXX_Size() int {
	return xxx_messageInfo_HostsToTraceRequest.Size(m)
}
func (m *HostsToTraceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HostsToTraceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HostsToTraceRequest proto.InternalMessageInfo

func (m *HostsToTraceRequest) GetHosts() []*Host {
	if m != nil {
		return m.Hosts
	}
	return nil
}

func (m *HostsToTraceRequest) GetComponentID() ComponentID {
	if m != nil {
		return m.ComponentID
	}
	return ComponentID_UNKNOWN_COMPONENT
}

type GetHostsToTraceRequest struct {
	ComponentID          ComponentID `protobuf:"varint,1,opt,name=componentID,proto3,enum=trace_sampling_manager.ComponentID" json:"componentID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetHostsToTraceRequest) Reset()         { *m = GetHostsToTraceRequest{} }
func (m *GetHostsToTraceRequest) String() string { return proto.CompactTextString(m) }
func (*GetHostsToTraceRequest) ProtoMessage()    {}
func (*GetHostsToTraceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d6cc870899719bb, []int{2}
}

func (m *GetHostsToTraceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetHostsToTraceRequest.Unmarshal(m, b)
}
func (m *GetHostsToTraceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetHostsToTraceRequest.Marshal(b, m, deterministic)
}
func (m *GetHostsToTraceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetHostsToTraceRequest.Merge(m, src)
}
func (m *GetHostsToTraceRequest) XXX_Size() int {
	return xxx_messageInfo_GetHostsToTraceRequest.Size(m)
}
func (m *GetHostsToTraceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetHostsToTraceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetHostsToTraceRequest proto.InternalMessageInfo

func (m *GetHostsToTraceRequest) GetComponentID() ComponentID {
	if m != nil {
		return m.ComponentID
	}
	return ComponentID_UNKNOWN_COMPONENT
}

type GetHostsToTraceResponse struct {
	Hosts                []*Host  `protobuf:"bytes,1,rep,name=hosts,proto3" json:"hosts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetHostsToTraceResponse) Reset()         { *m = GetHostsToTraceResponse{} }
func (m *GetHostsToTraceResponse) String() string { return proto.CompactTextString(m) }
func (*GetHostsToTraceResponse) ProtoMessage()    {}
func (*GetHostsToTraceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d6cc870899719bb, []int{3}
}

func (m *GetHostsToTraceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetHostsToTraceResponse.Unmarshal(m, b)
}
func (m *GetHostsToTraceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetHostsToTraceResponse.Marshal(b, m, deterministic)
}
func (m *GetHostsToTraceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetHostsToTraceResponse.Merge(m, src)
}
func (m *GetHostsToTraceResponse) XXX_Size() int {
	return xxx_messageInfo_GetHostsToTraceResponse.Size(m)
}
func (m *GetHostsToTraceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetHostsToTraceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetHostsToTraceResponse proto.InternalMessageInfo

func (m *GetHostsToTraceResponse) GetHosts() []*Host {
	if m != nil {
		return m.Hosts
	}
	return nil
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d6cc870899719bb, []int{4}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("trace_sampling_manager.ComponentID", ComponentID_name, ComponentID_value)
	proto.RegisterType((*Host)(nil), "trace_sampling_manager.Host")
	proto.RegisterType((*HostsToTraceRequest)(nil), "trace_sampling_manager.HostsToTraceRequest")
	proto.RegisterType((*GetHostsToTraceRequest)(nil), "trace_sampling_manager.GetHostsToTraceRequest")
	proto.RegisterType((*GetHostsToTraceResponse)(nil), "trace_sampling_manager.GetHostsToTraceResponse")
	proto.RegisterType((*Empty)(nil), "trace_sampling_manager.Empty")
}

func init() {
	proto.RegisterFile("trace-sampling-manager.proto", fileDescriptor_4d6cc870899719bb)
}

var fileDescriptor_4d6cc870899719bb = []byte{
	// 362 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x92, 0x41, 0x4f, 0xea, 0x40,
	0x14, 0x85, 0x19, 0x1e, 0xbc, 0xf7, 0xbc, 0x24, 0x80, 0x57, 0x45, 0x42, 0x30, 0xc1, 0xb2, 0x21,
	0x1a, 0x4a, 0x52, 0x13, 0xf7, 0x58, 0x1b, 0x35, 0x4a, 0x4b, 0xa6, 0x25, 0x46, 0x36, 0x93, 0x4a,
	0x26, 0x68, 0x62, 0x3b, 0xb5, 0x33, 0x2e, 0xfc, 0x17, 0xfe, 0x51, 0xff, 0x83, 0x69, 0x41, 0x45,
	0x2c, 0xc6, 0xb0, 0x6b, 0x73, 0xce, 0x99, 0xef, 0xdc, 0x3b, 0x03, 0x4d, 0x15, 0xfb, 0x13, 0xde,
	0x95, 0x7e, 0x10, 0x3d, 0xdc, 0x87, 0xd3, 0x6e, 0xe0, 0x87, 0xfe, 0x94, 0xc7, 0x7a, 0x14, 0x0b,
	0x25, 0xb0, 0x96, 0xaa, 0xec, 0x5d, 0x65, 0x73, 0x55, 0x3b, 0x86, 0xc2, 0xb9, 0x90, 0x0a, 0x1b,
	0xf0, 0xff, 0x4e, 0x48, 0x15, 0xfa, 0x01, 0xaf, 0x93, 0x16, 0xe9, 0x6c, 0xd0, 0x8f, 0x7f, 0x44,
	0x28, 0x44, 0x22, 0x56, 0xf5, 0x7c, 0x8b, 0x74, 0x8a, 0x34, 0xfd, 0xd6, 0x5e, 0x08, 0x6c, 0x25,
	0x41, 0xe9, 0x09, 0x2f, 0x39, 0x99, 0xf2, 0xc7, 0x27, 0x2e, 0x15, 0x1a, 0x50, 0x4c, 0x72, 0xb2,
	0x4e, 0x5a, 0x7f, 0x3a, 0x25, 0xa3, 0xa9, 0x67, 0x73, 0xf5, 0x24, 0x4b, 0x67, 0x56, 0xb4, 0xa0,
	0x34, 0x11, 0x41, 0x24, 0x42, 0x1e, 0xaa, 0x8b, 0xd3, 0x14, 0x53, 0x36, 0xda, 0xab, 0x92, 0xe6,
	0xa7, 0x95, 0x2e, 0xe6, 0x34, 0x06, 0xb5, 0x33, 0xae, 0xb2, 0x4a, 0x2d, 0x01, 0xc8, 0x9a, 0x80,
	0x01, 0xec, 0x7e, 0x03, 0xc8, 0x48, 0x84, 0x92, 0xaf, 0x33, 0xb6, 0xf6, 0x0f, 0x8a, 0x56, 0x10,
	0xa9, 0xe7, 0x83, 0x21, 0x94, 0x16, 0x98, 0xb8, 0x03, 0x9b, 0x23, 0xfb, 0xd2, 0x76, 0xae, 0x6d,
	0x66, 0x3a, 0x83, 0xa1, 0x63, 0x5b, 0xb6, 0x57, 0xcd, 0x61, 0x0d, 0xd0, 0x1d, 0x5a, 0x26, 0xa3,
	0x96, 0xe9, 0xd8, 0xae, 0x47, 0x47, 0xa6, 0xe7, 0xd0, 0x2a, 0x41, 0x84, 0xb2, 0x47, 0xfb, 0xa6,
	0xc5, 0xfa, 0x76, 0xff, 0xea, 0x66, 0x6c, 0xd1, 0x6a, 0xde, 0x78, 0x25, 0xb0, 0x9d, 0x16, 0x74,
	0xe7, 0x05, 0x06, 0x33, 0x3e, 0x32, 0xa8, 0xb8, 0x5f, 0x47, 0xc0, 0xc3, 0x9f, 0xba, 0x2e, 0x6d,
	0xb2, 0xb1, 0xb7, 0xca, 0x9c, 0x4e, 0xa2, 0xe5, 0x50, 0x41, 0x65, 0x69, 0x47, 0xa8, 0xaf, 0xca,
	0x64, 0xdf, 0x56, 0xa3, 0xf7, 0x6b, 0xff, 0x6c, 0xf9, 0x5a, 0xee, 0xa4, 0x3d, 0xde, 0x9f, 0xc6,
	0xd1, 0x84, 0xa5, 0x6f, 0xbd, 0x97, 0x1d, 0xbf, 0xfd, 0x9b, 0xaa, 0x47, 0x6f, 0x01, 0x00, 0x00,
	0xff, 0xff, 0x9d, 0x66, 0x3a, 0xda, 0x29, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// TraceSamplingManagerClient is the client API for TraceSamplingManager service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TraceSamplingManagerClient interface {
	SetHostsToTrace(ctx context.Context, in *HostsToTraceRequest, opts ...grpc.CallOption) (*Empty, error)
	GetHostsToTrace(ctx context.Context, in *GetHostsToTraceRequest, opts ...grpc.CallOption) (*GetHostsToTraceResponse, error)
}

type traceSamplingManagerClient struct {
	cc grpc.ClientConnInterface
}

func NewTraceSamplingManagerClient(cc grpc.ClientConnInterface) TraceSamplingManagerClient {
	return &traceSamplingManagerClient{cc}
}

func (c *traceSamplingManagerClient) SetHostsToTrace(ctx context.Context, in *HostsToTraceRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/trace_sampling_manager.TraceSamplingManager/SetHostsToTrace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *traceSamplingManagerClient) GetHostsToTrace(ctx context.Context, in *GetHostsToTraceRequest, opts ...grpc.CallOption) (*GetHostsToTraceResponse, error) {
	out := new(GetHostsToTraceResponse)
	err := c.cc.Invoke(ctx, "/trace_sampling_manager.TraceSamplingManager/GetHostsToTrace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TraceSamplingManagerServer is the server API for TraceSamplingManager service.
type TraceSamplingManagerServer interface {
	SetHostsToTrace(context.Context, *HostsToTraceRequest) (*Empty, error)
	GetHostsToTrace(context.Context, *GetHostsToTraceRequest) (*GetHostsToTraceResponse, error)
}

// UnimplementedTraceSamplingManagerServer can be embedded to have forward compatible implementations.
type UnimplementedTraceSamplingManagerServer struct {
}

func (*UnimplementedTraceSamplingManagerServer) SetHostsToTrace(ctx context.Context, req *HostsToTraceRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetHostsToTrace not implemented")
}
func (*UnimplementedTraceSamplingManagerServer) GetHostsToTrace(ctx context.Context, req *GetHostsToTraceRequest) (*GetHostsToTraceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetHostsToTrace not implemented")
}

func RegisterTraceSamplingManagerServer(s *grpc.Server, srv TraceSamplingManagerServer) {
	s.RegisterService(&_TraceSamplingManager_serviceDesc, srv)
}

func _TraceSamplingManager_SetHostsToTrace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HostsToTraceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TraceSamplingManagerServer).SetHostsToTrace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/trace_sampling_manager.TraceSamplingManager/SetHostsToTrace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TraceSamplingManagerServer).SetHostsToTrace(ctx, req.(*HostsToTraceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TraceSamplingManager_GetHostsToTrace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetHostsToTraceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TraceSamplingManagerServer).GetHostsToTrace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/trace_sampling_manager.TraceSamplingManager/GetHostsToTrace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TraceSamplingManagerServer).GetHostsToTrace(ctx, req.(*GetHostsToTraceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TraceSamplingManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "trace_sampling_manager.TraceSamplingManager",
	HandlerType: (*TraceSamplingManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetHostsToTrace",
			Handler:    _TraceSamplingManager_SetHostsToTrace_Handler,
		},
		{
			MethodName: "GetHostsToTrace",
			Handler:    _TraceSamplingManager_GetHostsToTrace_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "trace-sampling-manager.proto",
}
